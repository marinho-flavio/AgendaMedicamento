	
@using SES.Schedulings.Application.DTO.Aggregates.SchedulingsAgg.Requests;
@using SES.Schedulings.Enumerations;
@using Pages.RegisterStepsTemplate;
@inherits FeriadoCadastro

<div class="container-informations screen">
    <div class="box-inputs">
    <div class="input-cnpj">
            <div class="cnpj">
                <div class="container-1">
                    <div class="container-box-2 border-1px-silver">
                        <div class="cep-1 valign-text-middle inter-medium-sonic-silver-10px">@Model.GetFieldPlaceholder(Model.GetPropertyInfo(x=>x.Descricao))</div>
                        <input class="cnpj-1 valign-text-middle inter-medium-silver-16px"
                                @oninput="(x)=>{layout?.RefreshHeader(()=>{ Model.Descricao = (string)x.Value; });}"                        
                                @bind-value="Model.Descricao"
                                placeholder="@Model.GetFieldPlaceholder(nameof(Model.Descricao))" />
                    </div>
                </div>
                <div class="este-campo-obrigatrio valign-text-middle inter-normal-sonic-silver-10px">
                    <ValidationMessage For="@(() => Model.Descricao)"></ValidationMessage>
                </div>
            </div>
        </div>
 
    <div class="input-secondary"> 
        <div class="cdigo-cnes">
            <div class="container">
                <div class="container-box-1">
                    <div class="container-input-1 border-1px-silver">
                                                <div class="cep-1 valign-text-middle inter-medium-sonic-silver-10px">@Model.GetFieldPlaceholder(Model.GetPropertyInfo(x=>x.Data))</div>
                        <input @bind-value="Model.Data"
                              @oninput="(x)=>{layout?.RefreshHeader(()=>{ 
                                Model.Data = DateOnly.TryParse(x.Value.ToString(), out var val) ? val : DateOnly.MinValue;; });}" 
                                                      
                            type="date" class="cdigo-cnes-1 inter-medium-silver-16px"
                            placeholder="@Model.GetFieldPlaceholder(nameof(Model.Data))" />
                    </div>
                </div>
            </div>
            <div class="este-campo-obrigatrio-3 inter-normal-sonic-silver-10px">
                <ValidationMessage For="@(() => Model.Data)" />
            </div>
        </div>
         <div class="cdigo-cnes">
            <div class="container">
                <div class="container-box-1">
                    <div class="container-input-1 border-1px-silver">
                        <div class="cidade-localidade-1 valign-text-middle inter-medium-sonic-silver-10px">@Model.GetFieldPlaceholder(nameof(Model.Tipo))</div>
                        <SfDropDownList CssClass="inter-normal-silver-16px"
                                    @bind-Value="Model.Tipo"
                                    name="@nameof(Model.Tipo)"
                                                                        TValue="SES.Schedulings.Enumerations.HolidayType" TItem="SES.Schedulings.Enumerations.HolidayType"
                                    placeholder="@Model.GetFieldPlaceholder(x=>x.Tipo)"
                                    DataSource="Enum.GetValues(typeof(SES.Schedulings.Enumerations.HolidayType)).Cast<SES.Schedulings.Enumerations.HolidayType>()">
                    </SfDropDownList>
                    </div>
                </div>
            </div>
            <div class="este-campo-obrigatrio-3 inter-normal-sonic-silver-10px">
                <ValidationMessage For="@(() => Model.Tipo)"></ValidationMessage>
            </div>
        </div>
    </div> 
    </div>
</div>

@code {
    [CascadingParameter] BaseMainStepsLayout<FeriadoDTO> layout { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.StateHasChanged();
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}
