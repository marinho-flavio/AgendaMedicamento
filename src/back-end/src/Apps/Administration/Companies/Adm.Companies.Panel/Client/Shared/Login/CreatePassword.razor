@page "/login/criar-senha"
@using Companies.Adm.Panel.Shared.Models;
@using Microsoft.AspNetCore.Authorization;
@using Services.Implementations;
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@attribute [AllowAnonymous]

<body style="margin: 0; background: #ffffff">
    <input type="hidden" id="anPageName" name="page" value="tela-login-esqueci-minha-senha" />
    <div class="container-center-horizontal">
        <div class="tela-login-esqueci-minha-senha screen">
            <div class="esqueci-minha-senha-modal-card">
                @if (Success)
                {
                    <h1>Senha alterada com Sucesso! Acessando o sistema...</h1>
                }
                else
                {
                    <div class="main-title-assinatura-digital">
                        <img class="eparrow-right-bold"
                         src="https://anima-uploads.s3.amazonaws.com/projects/63486f9b8ee4feae84ab3e5a/releases/634dfbdde6df4c88bb664dff/img/ep-arrow-right-bold@2x.svg"
                         alt="ep:arrow-right-bold" />
                        <div class="container-title-cada">
                            <div class="container-title">
                                <div class="criar-nova-senha valign-text-middle inter-medium-chetwode-blue-12px">Criar nova senha</div>
                            </div>
                        </div>
                        <img class="bix-lg"
                         src="https://anima-uploads.s3.amazonaws.com/projects/63486f9b8ee4feae84ab3e5a/releases/6350b2423f27792e46568e8e/img/bi-x-lg@2x.svg"
                         alt="bi:x-lg" />
                    </div>
                    <div class="container-text-encontre-cpf">
                        <div class="title-encontre-cpf">
                            <div class="e-uma-nova-senh valign-text-middle inter-semi-bold-black-23px">Crie uma nova senha</div>
                        </div>

                        <div class="container-title">
                            <p class="e-uma-nova-senh valign-text-middle inter-normal-oslo-gray-12px">
                                Digite uma nova senha para retornar o acesso ao seu perfil.
                            </p>
                        </div>
                    </div>
                    <EditForm class="container-login" OnValidSubmit="OnSubmit" Model="Input">
                        <input type="hidden" @bind-value="Input.Code" />
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="x-senha">
                            <div class="container-input">
                                <input required type="password" @bind-value="Input.Password" placeholder="Digite sua Senha" class="x-senha-1 inter-normal-silver-14px" autocomplete="username" aria-required="true" />
                            </div>
                        </div>
                        <div class="x-senha">
                            <div class="container-input">
                                <input required type="password" @bind-value="Input.ConfirmPassword" placeholder="Confirme sua Senha" class="x-senha-1 inter-normal-silver-14px" autocomplete="username" aria-required="true" />
                            </div>
                        </div>
                        <button type="submit" class="continuar"><div class="continuar-1 inter-semi-bold-white-14px">Concluir</div></button>
                    </EditForm>
                }
            </div>
        </div>
    </div>
</body>

@code {
    bool Success = false;
    [Parameter] public string Code { get; set; }
    [Parameter] public string UserId { get; set; }
    public CreatePasswordParameters Input { get; set; } = new CreatePasswordParameters();

    protected override Task OnInitializedAsync()
    {
        if (Input == null)
        {
            Input = new CreatePasswordParameters { Code = this.Code, UserId = this.UserId };
        }

        return base.OnInitializedAsync();
    }

    async Task OnSubmit()
    {
        try
        {
            var result = await authStateProvider.CreatePassword(Input);
            this.Success = result.StatusCode == System.Net.HttpStatusCode.OK;
            if (this.Success)
            {
                navigationManager.NavigateTo($"/");
            }
        }
        catch (Exception ex)
        {
        }
    }
}