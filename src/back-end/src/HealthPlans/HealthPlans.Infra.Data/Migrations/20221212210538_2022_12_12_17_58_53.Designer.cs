// <auto-generated />
using System;
using System.Collections.Generic;
using Bravo.Core.Domain.Aggregates.CommonAgg.ValueObjects;
using Bravo.HealthPlans.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bravo.HealthPlans.Infra.Data.Migrations
{
    [DbContext(typeof(HealthPlansAggContext))]
    [Migration("20221212210538_2022_12_12_17_58_53")]
    partial class _20221212175853
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.Convenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoReferencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Logomarca")
                        .HasColumnType("text");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PadronizarQuantidadeDigitos")
                        .HasColumnType("boolean");

                    b.Property<int?>("QuantidadeDigitos")
                        .HasColumnType("integer");

                    b.Property<string>("RegistroANS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.ConvenioHorasEspeciais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HoraFinal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HoraInicial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId");

                    b.ToTable("ConvenioHorasEspeciais");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.HealthPlansAggSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<AutoSaveSettings>("AutoSaveSettings")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HealthPlansAggSettings");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.PlanoConvenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassificacaoServicoHospitalar")
                        .HasColumnType("integer");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoMedicamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MoedaMedicamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("MultiplicadorExame")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MultiplicadorHospitalar")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MultiplicadorProfissional")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoHospitalarDiferente")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoHospitalarMesma")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoHospitalarPrincipal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoPercentualPrincipal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoPrincipalDiferente")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProcedimentoPrincipalMesma")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoPlanoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoTabelaMedicamento")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId")
                        .IsUnique();

                    b.HasIndex("TipoPlanoId");

                    b.ToTable("PlanoConvenio");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.TipoPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TipoPlano");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.UsersAgg.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<EventsHistory>>("EventsHistory")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.ConvenioHorasEspeciais", b =>
                {
                    b.HasOne("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.Convenio", "Convenio")
                        .WithMany("HorasEspeciais")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.HealthPlansAggSettings", b =>
                {
                    b.HasOne("Bravo.HealthPlans.Domain.Aggregates.UsersAgg.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.PlanoConvenio", b =>
                {
                    b.HasOne("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.Convenio", "Convenio")
                        .WithOne("PlanoConvenio")
                        .HasForeignKey("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.PlanoConvenio", "ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.TipoPlano", "TipoPlano")
                        .WithMany()
                        .HasForeignKey("TipoPlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("TipoPlano");
                });

            modelBuilder.Entity("Bravo.HealthPlans.Domain.Aggregates.HealthPlansAgg.Entities.Convenio", b =>
                {
                    b.Navigation("HorasEspeciais");

                    b.Navigation("PlanoConvenio")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
